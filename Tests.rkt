#lang rosette

(require "Submission_7.rkt")

(if (eq? (vector-length (current-command-line-arguments)) 0)
    (printf "Please indicate the test you wish to run\n")
    (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 1)
        (simplify-exp (syntax (or a b)))
        (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 2)
            (simplify-exp (syntax (or (or a b) (or a b))))
            (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 3)
                (simplify-exp (syntax (and (or (and (or a b) (and b c)) (and b (or a c))) (and b (or (and a c) (or c b))))))
                (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 4)
                    (simplify-exp (syntax (or (! a) (and (and b (! b)) (! a)))))
                    (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 5)
                        (simplify-exp (syntax (+ b (+ a 0))))
                        (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 6)
                            (simplify-exp (syntax (+ (+ (- b 0) 0) (+ a 0))))
                            (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 7)
                                (simplify-exp (syntax (or a (> b c))))
                                (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 8)
                                    (simplify-exp (syntax (or (< a a) (< b c))))
                                    (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 9)
                                        (simplify-exp (syntax (and (> a b) (< c d))))
                                        (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 10)
                                            (simplify-exp (syntax (add1 4)))
                                            (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 11)
                                                (simplify-exp (syntax (if c a b)))
                                                (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 12)
                                                    (simplify-exp (syntax  (min (max (+ xm (min 0 0)) lm) (min xm2 lm2))))
                                                    (if (eq? (string->number (vector-ref (current-command-line-arguments) 0)) 13)
                                                        (simplify-exp (syntax (if (> (+ (- xmts lmts) xpos) (+ xaux_1 xpos)) xpos lpos) ))
                                                        (printf "Please choose a test between 1 and 13\n")))))))))))))))
